---
import Logo from "./Header/Logo.astro";
import ThemeSwitcher from "./Header/ThemeSwitcher.astro";
import Menu from "./Header/Menu.astro";
import LanguageSwitcher from "./Header/LanguageSwitcher";
---

<!-- This is an invisible div with relative position so that it takes up the height of the menu (because menu is absolute/fixed) -->
<div class="pointer-events-none relative h-20 w-full opacity-0"></div>
<header id="header" class="absolute top-0 z-50 h-20 w-full">
  <div
    class="mx-auto flex h-full max-w-5xl select-none items-center justify-between border-b border-l-0 border-r-0 border-transparent pl-6 pr-4 lg:rounded-b-xl lg:border-l lg:border-r"
  >
    <Logo />
    <nav
      class="relative z-30 flex w-full flex-row-reverse justify-start text-sm text-neutral-500 dark:text-neutral-400 sm:flex-row sm:justify-end"
    >
      <Menu />
      <ThemeSwitcher />
      <LanguageSwitcher currentLocale={Astro.currentLocale} />
    </nav>
  </div>
</header>

<!-- Sticky header script -->
<script>
  const stickyHeaderFuncionality = () => {
    window.addEventListener("scroll", () => {
      evaluateHeaderPosition();
    });
  };

  const evaluateHeaderPosition = () => {
    const headerElement = document.getElementById("header");
    const menuElement = document.getElementById("menu");
    const stickyClasses = ["fixed", "h-14"];
    const unstickyClasses = ["absolute", "h-20"];
    const stickyClassesContainer = [
      "border-neutral-300/50",
      "bg-white/80",
      "dark:border-neutral-600/40",
      "dark:bg-neutral-900/60",
      "backdrop-blur-2xl",
    ];
    const unstickyClassesContainer = ["border-transparent"];
    if (
      headerElement &&
      headerElement.firstElementChild &&
      menuElement &&
      menuElement.firstElementChild
    ) {
      console.log("evaluating header position");
      if (window.scrollY > 16) {
        headerElement.firstElementChild.classList.add(
          ...stickyClassesContainer
        );
        headerElement.firstElementChild.classList.remove(
          ...unstickyClassesContainer
        );
        headerElement.classList.add(...stickyClasses);
        headerElement.classList.remove(...unstickyClasses);
        menuElement.classList.add("top-[56px]");
        menuElement.classList.remove("top-[75px]");
      } else {
        headerElement.firstElementChild.classList.remove(
          ...stickyClassesContainer
        );
        headerElement.firstElementChild.classList.add(
          ...unstickyClassesContainer
        );
        headerElement.classList.add(...unstickyClasses);
        headerElement.classList.remove(...stickyClasses);
        menuElement.classList.remove("top-[56px]");
        menuElement.classList.add("top-[75px]");
      }
    }
  };

  const applyMenuItemClasses = () => {
    const menuItems = document.querySelectorAll("#menu a");
    for (let i = 0; i < menuItems.length; i++) {
      if (menuItems[i].getAttribute("href") === window.location.pathname) {
        menuItems[i].classList.add("text-neutral-900", "dark:text-white");
      }
    }
    //:class="{ 'text-neutral-900 dark:text-white': window.location.pathname == '{menu.url}', 'text-neutral-700 dark:text-neutral-400': window.location.pathname != '{menu.url}' }"
  };

  document.addEventListener("DOMContentLoaded", () => {
    stickyHeaderFuncionality();
    applyMenuItemClasses();
    evaluateHeaderPosition();
  });
</script>
